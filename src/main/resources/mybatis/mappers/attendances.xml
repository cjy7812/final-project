<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.last.mapper.WorkMapper">

	<insert id="addAttendance" parameterType="Attendance">
		insert into employee_attendances
			(attendance_no, employee_no, working_date, start_work_time, attendances_type)
		values
			(attendances_seq.nextval, #{empNo}, sysdate, to_char(sysdate, 'hh24:mi'), #{attendancesType})
	</insert>
	
	<update id="endAttendance" parameterType="Attendance">
		update 
			employee_attendances
		set
			attendances_type = #{attendancesType},
			end_work_time = to_char(sysdate, 'hh24:mi'),
			worked_times = #{workedTimes},
			overtime_worked_times = #{overtimeWorkedTimes},
			night_worked_times = #{nightWorkedTimes}
		where
			attendance_no = #{no}
	</update>
	
	<update id="updateAttendance" parameterType="Attendance">
		update
			employee_attendances
		set
			attendances_type = #{attendancesType},
			start_work_time = #{startWorkTime},
			end_work_time = #{endWorkTime},
			worked_times = #{workedTimes},
			overtime_worked_times = #{overtimeWorkedTimes},
			night_worked_times = #{nightWorkedTimes}
		where
			attendance_no = #{no}
	</update>
	
	<select id="getWeeklyAttendancesByEmpNo" parameterType="int" resultType="Attendance">
		select
			attendance_no		as no,
			employee_no 		as empNo, 
			working_date 		as workingDate, 
			start_work_time 	as startWorkTime,
			end_work_time 		as endWorkTime,
			worked_times		as workedTimes,
			holiday_work_time	as holidayWorkTime,
			overtime_worked_times	as overtimeWorkedTimes,
			night_worked_times	as nightWorkedTimes
		from
			employee_attendances
		where
			employee_no = #{value}
			and working_date between trunc(sysdate - 6)  and trunc(sysdate + 1) <!-- trunc(sysdate + 1) : 오늘 밤 12시 -->
		order by
			working_date desc
	</select>
	
	<!-- 월근태관리 사용자목록을 불러옴 -->
	<select id="getEmployees" resultType="MonthlyAttendanceDto">
		select
			A.employee_no		as employeeNo,
			A.employee_name 	as name,
			B.position_name 	as positionName,
			C.dept_name			as deptName,
			D.hobong_grade 		as hobongGrade
		from
			employees A,
			positions B,
			departments C,
			grades D
		where
			A.position_No = B.position_No
			and A.dept_No = C.dept_No
			and A.hobong_grade = D.hobong_grade
		order by 
			employee_no asc
			
	</select>
	<select id="getEmployeesByEmpNo" resultType="MonthlyAttendanceDto">
		select
			A.employee_no		as employeeNo,
			A.employee_name 	as name,
			B.position_name 	as positionName,
			C.dept_name			as deptName,
			D.hobong_grade 		as hobongGrade
		from
			employees A,
			positions B,
			departments C,
			grades D
		where
			A.position_No = B.position_No
			and A.employee_no = #{value}
			and A.dept_No = C.dept_No
			and A.hobong_grade = D.hobong_grade
		order by 
			employee_no asc
			
	</select>
	
	<select id="getMonthStatusList" resultType="AdminAttendanceDto">
		select
			A.employee_no		as empNo,
			A.employee_name 	as empName,
			B.position_name 	as positionName,
			C.dept_name			as deptName
		from
			employees A,
			positions B,
			departments C
		where
			A.position_No = B.position_No
			and A.dept_No = C.dept_No
		order by 
			employee_no asc
			
	</select>
	
	<!-- 월근태일수정보 -->
	<select id="getMonthlyWorkDaysSummary" resultType="DaysSummaryDto">
		select sum(decode(attendances_type, '정상', 1, 0)) 					as normalWorkedDays,
		       sum(decode(attendances_type, '연장', 1, '지각/연장근무', 1, 0)) 	as overtimeWorkedDays,
		       sum(decode(attendances_type, '야근', 1, '지각/야근', 1, 0)) 		as nightWorkedDays,
		       sum(decode(attendances_type, '조퇴', 1, '지각/조퇴', 1, 0)) 		as leaveEarlyDays,
		       sum(decode(attendances_type, '지각', 1, '지각/조퇴', 1, '지각/연장근무', 1, '지각/야근', 1,0)) as tardyDays
		from 
			employee_attendances
		where 
			employee_no = #{employeeNo}
			and to_char(working_date, 'yyyy-mm') = #{yearMonth}
	</select>
	
	<!-- 월근태시간정보 -->
	<select id="getMonthlyWorkTimesSummary" resultType="TimesSummaryDto">
		select sum(worked_times) as totalWorkedTimes, 
        	   sum(overtime_worked_times) as overtimeWorkedTimes, 
               sum(night_worked_times) as nightWorkedTimes
		from 
			employee_attendances
		where 
			employee_no = #{employeeNo}
			and to_char(working_date, 'yyyy-mm') = #{yearMonth}
	</select>
	
	<select id="getAttendanceByNo" parameterType="int" resultType="AdminAttendanceDto">
		select
			attendance_no		as no,
			employee_no 		as empNo, 
			working_date 		as workingDate, 
			start_work_time 	as startWorkTime,
			end_work_time 		as endWorkTime,
			worked_times		as workedTimes,
			holiday_work_time	as holidayWorkTime,
			overtime_worked_times	as overtimeWorkedTimes,
			night_worked_times	as nightWorkedTimes
		from
			employee_attendances
		where
			attendance_no = #{value}
		order by
			working_date desc
	</select>
	
	<select id="getTodayStartAttendancedByEmpNo" parameterType="int" resultType="Attendance">
		select
			attendance_no		as no,
			employee_no 		as empNo, 
			working_date 		as workingDate, 
			start_work_time 	as startWorkTime,
			end_work_time 		as endWorkTime,
			worked_times		as workedTimes,
			holiday_work_time	as holidayWorkTime,
			overtime_worked_times	as overtimeWorkedTimes,
			night_worked_times	as nightWorkedTimes
		from
			employee_attendances
		where
			employee_no = #{value}
			and working_date between trunc(sysdate)  and trunc(sysdate + 1) <!-- trunc(sysdate + 1) : 오늘 밤 12시 -->
	</select>
	
	<select id="getTodayEndAttendancedByEmpNo" parameterType="int" resultType="Attendance">
		select
			attendance_no		as no,
			employee_no 		as empNo, 
			working_date 		as workingDate, 
			start_work_time 	as startWorkTime,
			end_work_time 		as endWorkTime,
			worked_times		as workedTimes,
			holiday_work_time	as holidayWorkTime,
			overtime_worked_times	as overtimeWorkedTimes,
			night_worked_times	as nightWorkedTimes
		from
			employee_attendances
		where
			employee_no = #{value}
			and end_work_time is not null
			and working_date between trunc(sysdate)  and trunc(sysdate + 1) <!-- trunc(sysdate + 1) : 오늘 밤 12시 -->
	</select>
	
	
	<!-- 
		List<WorkAttendance> getAllAttendancesByDateRange(@Param("empNo") int empNo, 
		@Param("startDate") String startDate, @Param("endDate") String endDate);
		@Param을 적으면 parameterType을 적으면 안됨
	 -->
	<select id="getAllAttendancesByDateRange" resultType="Attendance">
		select
			attendance_no		as no,
			employee_no 		as empNo, 
			working_date 		as workingDate, 
			start_work_time 	as startWorkTime,
			end_work_time 		as endWorkTime,
			worked_times		as workedTimes,
			holiday_work_time	as holidayWorkTime,
			overtime_worked_times	as overtimeWorkedTimes,
			night_worked_times	as nightWorkedTimes
		from
			employee_attendances
		where
			employee_no = #{empNo}
			and working_date between #{startDate} and to_date(#{endDate}, 'yyyy-mm-dd') + 1
		order by
			working_date desc
		
	</select>
	
	<!-- 
		List<WorkAdminAttendanceDto> getAllAdminAttendancesByOptions
			(int empNo, @Param("startDate") String startDate, @Param("endDate") String endDate, 
						@Param("position") String  position, @Param("dept") String dept);
	 -->
	 <select id="getAllAdminAttendancesByOptions" parameterType="map" resultType="AdminAttendanceDto">
		select *
		from (
			select 
				row_number() over (order by A.working_date desc) row_numbers,
				A.attendance_no		as no,
				A.working_date		as workingDate,
				A.start_work_time 	as startWorkTime,
				A.end_work_time 	as endWorkTime,
				B.employee_name 	as empName,
				B.employee_no		as empNo,
				C.dept_name 		as deptName,
				D.position_name 	as positionName,
				A.attendances_type	as attendancesType,
				A.worked_times		as workedTimes,
				A.holiday_work_time		as holidayWorkTime,
				A.overtime_worked_times	as overtimeWorkedTimes,
				A.night_worked_times	as nightWorkedTimes
			from
				employee_attendances A,
				employees B,
				departments C,
				positions D
			where
				A.employee_no = B.employee_no
				and B.dept_no = C.dept_no
				and B.position_no = D.position_no
				<if test="empNo == null and deptNo == null and positionNo == null and startDate == null and endDate == null">
					and A.working_date between trunc(sysdate) and trunc(sysdate + 1)
				</if>
				<if test="empNo != null">
					and A.employee_no = #{empNo}			
				</if>
					
				<if test="deptNo != null">
					and C.dept_no = #{deptNo}
				</if>
				
				<if test="positionNo != null">
					and D.position_no = #{positionNo}
				</if>
				
				<if test="startDate != null">
					and working_date >= #{startDate} 		
				</if>
				
				<if test="endDate != null">
					and working_date &lt; to_date(#{endDate}) + 1 	
				</if>)
			<if test="begin != null and end != null">
				where row_numbers between #{begin} and #{end}
			</if>
	</select>
	
	<!-- 엑셀에 들어가는 정보 -->
	<select id="getAllAdminAttendancesForExcel" parameterType="map" resultType="hashmap">
	
			select 
				A.attendance_no		as no,
				to_char(A.working_date, 'yyyy-mm-dd')		as workingDate,
				A.start_work_time 	as startWorkTime,
				A.end_work_time 	as endWorkTime,
				B.employee_name 	as empName,
				B.employee_no		as empNo,
				C.dept_name 		as deptName,
				D.position_name 	as positionName,
				A.attendances_type	as attendancesType,
				A.worked_times		as workedTimes,
				A.holiday_work_time		as holidayWorkTime,
				A.overtime_worked_times	as overtimeWorkedTimes,
				A.night_worked_times	as nightWorkedTimes
			from
				employee_attendances A,
				employees B,
				departments C,
				positions D
			where
				A.employee_no = B.employee_no
				and B.dept_no = C.dept_no
				and B.position_no = D.position_no
				<if test="empNo == null and deptNo == null and positionNo == null and startDate == null and endDate == null">
					and A.working_date between trunc(sysdate) and trunc(sysdate + 1)
				</if>
				<if test="empNo != null">
					and A.employee_no = #{empNo}			
				</if>
					
				<if test="deptNo != null">
					and C.dept_no = #{deptNo}
				</if>
				
				<if test="positionNo != null">
					and D.position_no = #{positionNo}
				</if>
				
				<if test="startDate != null">
					and working_date >= #{startDate} 		
				</if>
				
				<if test="endDate != null">
					and working_date &lt; to_date(#{endDate}) + 1 	
				</if>
	</select>
	
	
	<select id="getTotalRows" parameterType="map" resultType="int">
		select
			count(*)
		from
			employee_attendances A,
			employees B,
			departments C,
			positions D
		where
			A.employee_no = B.employee_no
			and B.dept_no = C.dept_no
			and B.position_no = D.position_no
			<if test="empNo == null and deptNo == null and positionNo == null and startDate == null and endDate == null">
				and A.working_date between trunc(sysdate) and trunc(sysdate + 1)
			</if>
			<if test="empNo != null">
				and A.employee_no = #{empNo}			
			</if>
				
			<if test="deptNo != null">
				and C.dept_no = #{deptNo}
			</if>
			
			<if test="positionNo != null">
				and D.position_no = #{positionNo}
			</if>
			
			<if test="startDate != null">
				and working_date >= #{startDate} 		
			</if>
			
			<if test="endDate != null">
				and working_date &lt; to_date(#{endDate}) + 1 	
			</if>
	</select>

</mapper>