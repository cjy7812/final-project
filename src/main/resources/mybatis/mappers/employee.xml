<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.last.mapper.EmployeeMapper">
	
	
	<select id="getAllEmployees" parameterType="map" resultType="EmployeeDto">
		select
			E.employee_no			as no,
			E.employee_name			as name,
			E.hire_date				as hire,
			E.mobile_tel			as mobileTel,
			E.company_email			as companyEmail,
			E.home_basic_address	as basicAddress,
			E.employee_status		as status,
			D.dept_name				as deptName,
			P.position_name			as positionName
		from
			employees E, departments D, positions P
		where
			E.dept_no = D.dept_no
		and
			E.position_no = P.position_no
		
		<if test="sort != null">
			<choose>
				<when test="sort == 'name'">
					and E.employee_name = #{keyword}
				</when>
				<when test="sort == 'position'">
					and E.position_no in (select position_no from positions where position_name = #{keyword})
				</when>
				<when test="sort == 'dept'">
					and E.dept_no in (select dept_no from departments where dept_name = #{keyword})
				</when>
			</choose>
		</if>
		<if test="status == null">
			and E.employee_status = 'N'
		</if>
		<if test="sort == null and keyword != null">
			and (E.employee_name like '%' || #{keyword} || '%'
			or E.home_basic_address like '%' || #{keyword} || '%')
		</if>
		order by
			E.employee_no asc
	</select>
	
	<select id="getAllPersonnel" parameterType="map" resultType="PersonnelDto">
		select
			E.employee_no			as no,
			A.appointment_type		as type,
			A.appointment_date		as appointmentDate,			<!-- date는 오라클 예약어이므로 에러남 -->
			A.appointment_content	as content,
			A.appointment_note		as note,
			E.employee_name			as name,
			E.employee_status		as status
		from
			employees E, employee_appointment_histories A
		where
			E.employee_no = A.employee_no
			
		<if test="sort != null">
			<choose>
				<when test="sort == 'join'">
					and A.appointment_type = '입사'
				</when>
				<when test="sort == 'promotion'">
					and A.appointment_type = '승진'
				</when>
				<when test="sort == 'transfer'">
					and A.appointment_type = '전보'
				</when>
				<when test="sort == 'leave'">
					and A.appointment_type = '휴직'
				</when>
				<when test="sort == 'retirement'">
					and A.appointment_type = '퇴직'
				</when>
			</choose>
		</if>
		<if test="startDate != null">
			and A.appointment_date >= #{startDate}
		</if>
		<if test="endDate != null">
			and A.appointment_date &lt;= #{endDate}
		</if>
		and
			E.employee_status = 'N'								<!-- 인사발령등록에서는 퇴직자는 안나오게 함 -->
		order by
			E.employee_no asc
	</select>

	<select id="getAllCertificate" parameterType="map" resultType="CertificateDto">
		select
			C.request_no		as requestNo,
			C.certificate_type	as type,
			C.request_date		as requestDate,
			E.employee_no		as no,
			E.employee_name		as name,
			C.request_status	as requestStatus,
			C.publish_date		as publishDate,
			C.purpose			as purpose,
			E.employee_status	as status
		from
			employees E, certificate_request_histories C
		where
			E.employee_no = C.employee_no
		<if test="sort != null">
			<choose>
				<when test="sort == 'proof'">
					and C.certificate_type = '재직증명서'
				</when>
				<when test="sort == 'career'">
					and C.certificate_type = '경력증명서'
				</when>
				<when test="sort == 'withholding'">
					and C.certificate_type = '원천징수영수증'
				</when>
				<when test="sort == 'income'">
					and C.certificate_type = '각종근로소득증명서'
				</when>
				<when test="sort == 'payslip'">
					and C.certificate_type = '급여명세서'
				</when>
			</choose>
		</if>
		<if test="startDate != null">
			and C.request_date >= #{startDate}
		</if>
		<if test="endDate != null">
			and C.request_date &lt;= #{endDate}
		</if>
		and
			E.employee_status = 'N'
		order by
			E.employee_no asc
	</select>
	
	<select id="getEmployee" resultType="EmployeeDto">		<!-- personnel-register에서 사원 목록 조회 -->
		select
			E.employee_no			as no,
			E.employee_name			as name,
			E.employee_status		as status,
			D.dept_name				as deptName,
			P.position_name			as positionName
		from
			employees E, departments D, positions P
		where
			E.dept_no = D.dept_no
		and
			E.position_no = P.position_no
		and
			E.employee_status = 'N'
		order by
			E.employee_no asc
			
	</select>

	<select id="getAllEmployeeDetailDto" parameterType="int" resultType="EmployeeDetailDto">	<!-- 사원명부/인사기록에서 사원번호를 통해 직원정보 상세조회 -->
		select
			E.employee_no			as employeeNo,
			E.employee_name			as name,
			E.employee_gender		as gender,
			E.employee_birthday		as birthday,
			E.memo					as memo,
			E.company_tel			as comTel,
			E.home_tel				as homeTel,
			E.mobile_tel			as mobileTel,
			E.company_email			as comEmail,
			E.external_email		as extEmail,
			E.home_zipcode			as zipcode,
			E.home_basic_address	as basicAddress,
			E.home_detail_address	as detailAddress,
			E.hire_date				as hireDate,
			E.retirement_date		as retirementDate,
			E.employee_status		as employeeStatus,
			E.employee_role_name	as employeeRoleName,
			E.hobong_grade			as hobong,
			E.photo					as photo,
			D.dept_name				as deptName,
			P.position_name			as positionName
		from
			employees E, departments D, positions P
		where
			E.dept_no = D.dept_no
		and
			E.position_no = P.position_no
		and
			employee_no = #{value}
	</select>

	<select id="getAllEmployeebyNo" parameterType="int" resultType="employee">		<!-- 사원번호로 직원정보 조회 -->
		select
			employee_no			as employeeNo,
			employee_password	as password,
			employee_name		as name,
			employee_gender		as gender,
			employee_birthday	as birthday,
			company_tel			as comTel,
			home_tel			as homeTel,
			mobile_tel			as mobileTel,
			company_email		as comEmail,
			external_email		as extEmail,
			home_zipcode		as zipcode,
			home_basic_address	as basicAddress,
			home_detail_address	as detailAddress,
			hire_date			as hireDate,
			retirement_date		as retirementDate,
			employee_status		as employeeStatus,
			employee_role_name	as employeeRoleName,
			memo				as memo,
			dept_no				as deptNo,
			position_no			as positionNo,
			hobong_grade		as hobong,
			photo				as photo
		from
			employees
		where
			employee_no = #{value}
	</select>
	
	<select id="getAllAppointment" parameterType="int" resultType="Appointment">	<!-- 사원번호로 인사발령내역 조회 -->
		select
			employee_no				as employeeNo,
			appointment_type		as type,
			appointment_date		as appointmentDate,
			appointment_content		as content,
			appointment_note		as note
		from
			employee_appointment_histories
		where
			employee_no = #{value}
	</select>
	
	<select id="getAllCertficate" parameterType="int" resultType="HrCertifcateRequest">
		select
			request_no				as requestNo,
			certificate_type		as type,
			request_date			as requestDate,
			publish_date			as publishDate,
			request_status			as status,
			purpose					as purpose,
			note					as note,
			request_created_date	as createdDate,
			request_updated_date	as updatedDate,
			employee_no				as no
		from
			certificate_request_histories
		where
			employee_no = #{value}
	</select>
	
	<select id="getCertificatebyNo" parameterType="int" resultType="HrCertifcateRequest">
		select
			request_no				as requestNo,
			certificate_type		as type,
			request_date			as requestDate,
			publish_date			as publishDate,
			request_status			as status,
			purpose					as purpose,
			note					as note,
			request_created_date	as createdDate,
			request_updated_date	as updatedDate,
			employee_no				as no
		from
			certificate_request_histories
		where
			request_no = #{value}
	</select>
	
	<update id="updateCertificatebyNo" parameterType="HrCertifcateRequest">
		update
			certificate_request_histories
		set
			request_no = #{requestNo},
			certificate_type = #{type},
			request_date = #{requestDate},
			publish_date = #{publishDate},
			request_status = #{status},
			purpose = #{purpose},
			note = #{note},
			request_updated_date = sysdate,
			employee_no = #{no}
		where
			request_no = #{requestNo}
	</update>
	
	<delete id="deleteCertificate" parameterType="int">
		delete from
			certificate_request_histories
		where
			employee_no = #{value}
	</delete>
	
	<delete id="deleteAppointment" parameterType="int">
		delete from
			employee_appointment_histories
		where
			employee_no = #{value}
	</delete>
	
	<select id="getCertificateRequest" resultType="HrCertifcateRequest">		<!-- 증명서신청내역 조회 -->
		select
			request_no				as requestNo,
			certificate_type		as type,
			request_date			as requestDate,
			publish_date			as publishDate,
			request_status			as status,
			purpose					as purpose,
			note					as note,
			request_created_date	as createdDate,
			request_updated_date	as updatedDate,
			employee_no				as no
		from
			certificate_request_histories
	</select>

	<update id="updateEmployees" parameterType="employee">		<!-- 직원 정보 업데이트 -->
		update
			employees
		set
			employee_password = #{password},
			employee_name = #{name},
			employee_gender = #{gender},
			employee_birthday = #{birthday},
			company_tel = #{comTel},
			home_tel = #{homeTel},
			mobile_tel = #{mobileTel},
			company_email = #{comEmail},
			external_email = #{extEmail},
			home_zipcode = #{zipcode},
			home_basic_address = #{basicAddress},
			home_detail_address = #{detailAddress},
			hire_date = #{hireDate},
			retirement_date = #{retirementDate},
			employee_status = #{employeeStatus},
			employee_role_name = #{employeeRoleName},
			memo = #{memo},
			employee_updated_date = sysdate,
			dept_no = #{deptNo},
			position_no = #{positionNo},
			hobong_grade = #{hobong},
			photo = #{photo}
		where
			employee_no = #{employeeNo}
	</update>
	
	<update id="updateDepartments" parameterType="Department">		<!-- 발령부서 업데이트 -->
		update
			departments
		set
			dept_name = #{deptName}
		where
			dept_no = #{deptNo}
	</update>
	
	<update id="updatePositions" parameterType="Position">		<!-- 발령직급 업데이트 -->
		update
			positions
		set
			position_name = #{positionName},
			position_base_salary = #{positionSalary}
		where
			position_no = #{positionNo}
	</update>
	
	
	<update id="updateAppointment" parameterType="appointment">		<!-- 발령구분, 발령일자, 발령내용, 비고 업데이트 -->
		update
			employee_appointment_histories
		set
			appointment_type = #{type},
			appointment_date = #{appointmentDate},
			appointment_content = #{content},
			appointment_note = #{note}
		where
			employee_no = #{employeeNo}
	</update>
	
	<!-- <update id="updateCertificateRequest" parameterType="HrCertifcateRequest">
		update
			certificate_request_histories
		set
			request_no
			certificate_type
			request_date
			publish_date
			request_status
			purpose
			note
			request_created_date
			request_updated_date
			employee_no
		where
			
	</update> -->
	
	<select id="getCertificateIssue" parameterType="int" resultType="CertificateIssueDto">		<!-- 증명서신청하는 직원의 정보 -->
		select
			E.employee_no			as employeeNo,
			E.employee_name			as name,
			E.hobong_grade			as hobong,
			D.dept_name				as deptName,
			P.position_name			as positionName
		from
			employees E, departments D, positions P
		where
			E.dept_no = D.dept_no
		and
			E.position_no = P.position_no
		and
			E.employee_no = #{value}
	</select>
	
	<insert id="insertPositions" parameterType="Position">
		insert into positions
			(position_no, position_name, position_base_salary)
		values
			(#{positionNo}, #{positionName}, #{positionSalary})
	</insert>
	
	<insert id="insertDepartments" parameterType="Department">
		insert into departments
			(dept_no, dept_name)
		values
			(#{deptNo}, #{deptName})
	</insert>
	
	<insert id="insertAppointment" parameterType="Appointment">
		insert into employee_appointment_histories
			(employee_no, appointment_type, appointment_date, appointment_content, appointment_note)
		values
			(#{employeeNo}, #{type}, #{appointmentDate}, #{content}, #{note})
	</insert>
	
	<insert id="insertCertificate" parameterType="HrCertifcateRequest">
		insert into certificate_request_histories
			(request_no, certificate_type, request_date, publish_date, request_status, purpose, employee_no)
		values
			(CERTIFICATE_REQUEST_HISTORIES_SEQ.nextval, #{type}, #{requestDate}, #{publishDate}, #{status}, #{purpose}, #{no})
	</insert>
	
	<select id="getAllPosition" resultType="Position">
		select	
			position_no 		as positionNo, 
			position_name 		as positionName
		from positions
	</select>

	<select id="getAllDepartment" resultType="Department">
		select	
			dept_no 		as deptNo, 
			dept_name 		as deptName
		from departments
	</select>
	
	<select id="getAllGrade" resultType="Grades">
		select	
			hobong_grade		as hobongGrade, 
			hobong_amount 		as hobongAmount
		from grades
	</select>

	<select id="getAllEmployee" resultType="Employee">
	select
			a.employee_no			as employeeNo,
			a.employee_password		as password,
			a.employee_name			as name,
			a.employee_gender		as gender,
			a.employee_birthday		as birthday,
			a.company_tel			as comTel,
			a.home_tel				as homeTel,
			a.mobile_tel			as mobileTel,
			a.company_email			as comEmail,
			a.external_email		as extEmail,
			a.home_zipcode			as zipcode,
			a.home_basic_address	as basicAddress,
			a.home_detail_address	as detailAddress,
			a.hire_date				as hireDate,
			a.retirement_date		as retirementDate,
			a.employee_status		as employeeStatus,
			a.employee_role_name	as employeeRoleName,
			a.memo					as memo,
			a.dept_no				as deptNo,
			a.position_no			as positionNo,
			a.hobong_grade			as hobong,
			a.photo					as photo,
			c.dept_name				as deptName,
			b.position_name 		as positionName
         from
            employees a, positions b, departments c
         where
                a.position_no = b.position_no
                and a.dept_no = c.dept_no
                <if test="status != null">
                	and a.employee_status = #{status}
                </if>     
            order by
				employee_no asc
	</select>
	


	<insert id="insertEmployeesForExcel" parameterType="map">
			insert into Employees
				(employee_no, employee_password, employee_name, employee_gender, employee_birthday, company_tel, home_tel, mobile_tel, company_email, external_email, home_zipcode, home_basic_address, home_detail_address, hire_date, employee_status, employee_role_name, memo, dept_no, position_no, hobong_grade, photo)
			values
				(#{사원번호}, #{비밀번호}, #{성명}, #{성별}, #{생일}, #{회사전화}, #{자택전화}, #{핸드폰}, #{회사이메일}, #{외부이메일}, #{우편번호}, #{기본주소}, #{상세주소}, #{입사일자}, #{재직구분}, #{보유권한}, #{메모}, #{부서}, #{직급}, #{호봉}, #{사진})
	</insert>
	<insert id="insertEmployees" parameterType="Employee">
			insert into Employees
				(employee_no, employee_password, employee_name, employee_gender, employee_birthday, company_tel, home_tel, mobile_tel, company_email, external_email, home_zipcode, home_basic_address, home_detail_address, hire_date, retirement_date, employee_status, employee_role_name, memo, dept_no, position_no, hobong_grade, photo)
			values
				(#{employeeNo}, #{password}, #{name}, #{gender}, #{birthday}, #{comTel}, #{homeTel}, #{mobileTel}, #{comEmail}, #{extEmail}, #{zipcode}, #{basicAddress}, #{detailAddress}, #{hireDate}, #{retirementDate}, #{employeeStatus}, #{employeeRoleName}, #{memo}, #{deptNo}, #{positionNo}, #{hobong}, #{photo})
	</insert>

	<select id="getEmployeesByNo" parameterType="int" resultType="Employee">
		select
			a.employee_no			as employeeNo,
			a.employee_password		as password,
			a.employee_name			as name,
			a.employee_gender		as gender,
			a.employee_birthday		as birthday,
			a.company_tel			as comTel,
			a.home_tel				as homeTel,
			a.mobile_tel			as mobileTel,
			a.company_email			as comEmail,
			a.external_email		as extEmail,
			a.home_zipcode			as zipcode,
			a.home_basic_address	as basicAddress,
			a.home_detail_address	as detailAddress,
			a.hire_date				as hireDate,
			a.retirement_date		as retirementDate,
			a.employee_status		as employeeStatus,
			a.employee_role_name	as employeeRoleName,
			a.memo					as memo,
			a.dept_no				as deptNo,
			a.position_no			as positionNo,
			a.hobong_grade			as hobong,
			a.photo					as photo,
			c.dept_name				as deptName,
			b.position_name 		as positionName
         from
            employees a, positions b, departments c
         where
                a.position_no = b.position_no
                and a.dept_no = c.dept_no
		 		and employee_no = #{value}
	</select>
	
	<update id="infoRegister" parameterType="Employee">
		update 
			employees
		set
			employee_status = 'N'
		where
			employee_no = #{employeeNo}
	</update>
	
</mapper>